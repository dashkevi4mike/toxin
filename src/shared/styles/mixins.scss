@import './variables.scss';

@mixin safe-breakpoints($breakpoints...) {
  @each $bp in $breakpoints {
    @if not map-has-key($available-breakpoints, $bp) {
      @error 'The #{$bp} breakpoint doesn\'t exist.';
    }
  }

  @content;
}

@mixin breakpoint-up($bp) {
  @include safe-breakpoints($bp) {
    @media (min-width: map-get($available-breakpoints, $bp)) {
      @content;
    }
  }
}

@mixin breakpoint-down($bp) {
  @include safe-breakpoints($bp) {
    @media (max-width: map-get($available-breakpoints, $bp) - 0.05px) {
      @content;
    }
  }
}

@mixin breakpoint-between($bp-left, $bp-right) {
  @include safe-breakpoints($bp-left, $bp-right) {
    $min-width: map-get($available-breakpoints, $bp-left);
    $max-width: map-get($available-breakpoints, $bp-right) - 0.05px;

    @if ($min-width >= $max-width) {
      @error 'For breakpoint-between the left boundary of the interval must be less than the right boundary';
    }

    @media (min-width: $min-width) and (max-width: $max-width) {
      @content;
    }
  }
}

@mixin color($property, $name) {
  $colorObj: map-get($available-colors, $name);

  @if ($property == 'color') {
    color: map-get($colorObj, 'color');
  }

  @if ($property == 'backgroundColor') {
    background-color: map-get($colorObj, 'color');
  }

  opacity: map-get($colorObj, 'opacity');
}

@mixin font($type) {
  $fontObj: map-get($available-fonts, $type);

  font-weight: map-get($fontObj, 'weight');
  font-size: map-get($fontObj, 'size');
  font-family: map-get($fontObj, 'family');
  line-height: map-get($fontObj, 'lineHeight');
}
